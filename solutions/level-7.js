// Возвращает количество гласных в заданной строке.
// Мы будем считать a, e, i, o, u гласными для этой ката (но не y).
// Входная строка будет состоять только из строчных букв и/или пробелов.

const getCount = str => {
  return str.split('').filter(char => 'aeiou'.includes(char)).length
}

const getCount1 = str => {
  let res = 0
  for (let i = 0; i < str.length; i++) {
    if ('aeiou'.includes(str[i])) {
      res += 1
    }
  }
  return res
}

const getCount2 = str => {
  return str.split('').reduce((acc, char) => {
    return 'aeiou'.includes(char) ? acc + 1 : acc
  }, 0)
}

// Тролли атакуют ваш раздел комментариев!
// Обычный способ справиться с этой ситуацией — удалить все гласные из комментариев троллей, нейтрализовав угрозу.
// Ваша задача — написать функцию, которая принимает строку и возвращает новую строку, из которой удалены все гласные.
// Например, строка «Этот сайт для неудачников LOL!» превратится в «Ths wbst s fr lsrs LL!».
// Примечание: в этой ката y не считается гласной.

const disemvowel = str => {
  return str
    .split('')
    .filter(char => !'aeiouAEIOU'.includes(char))
    .join('')
}

const disemvowel1 = str => {
  let res = ''
  for (let i = 0; i < str.length; i++) {
    if (!'aeiouAEIOU'.includes(str[i])) {
      res += str[i]
    }
  }
  return res
}

// Добро пожаловать. В этом задании вам предлагается возвести в квадрат каждую цифру числа и сложить их.
// Например, если мы пропустим через функцию 9119, получится 811181, потому что 92 — это 81, а 12 — это 1. (81-1-1-81)
// Пример №2: Ввод числа 765 вернёт/должен вернуть 493625, потому что 72 — это 49, 62 — это 36, а 52 — это 25. (49-36-25)
// Примечание: Функция принимает и возвращает целое число.
// Удачного программирования!

const squareDigits = num =>
  Number(
    num
      .toString()
      .split('')
      .map(d => Number(d) ** 2)
      .join('')
  )

// В этом небольшом задании вам дана строка чисел, разделённых пробелами, и вам нужно вернуть наибольшее и наименьшее числа.
// Примеры
// highAndLow("1 2 3 4 5"); // вернуть "5 1"
// highAndLow("1 2 -3 4 5"); // вернуть "5 -3"
// highAndLow("1 9 3 4 -5"); // вернуть "9 -5"
// Примечания
// Все числа являются допустимыми числами типа Int32, проверять их не нужно.
// Во входной строке всегда будет хотя бы одно число.
// Выходная строка должна состоять из двух чисел, разделённых одним пробелом, причём наибольшее число должно быть первым.

const highAndLow = numbers => {
  numbers = numbers.split(' ')
  return `${Math.max(...numbers)} ${Math.min(...numbers)}`
}
